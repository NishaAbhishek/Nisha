{"ast":null,"code":"import Badge from \"./badge\";\nvar parts = [\"container\", \"label\", \"closeButton\"];\nvar baseStyleContainer = {\n  fontWeight: \"medium\",\n  lineHeight: 1.2,\n  outline: 0,\n  _focus: {\n    boxShadow: \"outline\"\n  }\n};\nvar baseStyleLabel = {\n  lineHeight: 1.2\n};\nvar baseStyleCloseButton = {\n  fontSize: \"18px\",\n  w: \"1.25rem\",\n  h: \"1.25rem\",\n  transitionProperty: \"common\",\n  transitionDuration: \"normal\",\n  borderRadius: \"full\",\n  marginStart: \"0.375rem\",\n  marginEnd: \"-1\",\n  opacity: 0.5,\n  _disabled: {\n    opacity: 0.4\n  },\n  _focus: {\n    boxShadow: \"outline\",\n    bg: \"rgba(0, 0, 0, 0.14)\"\n  },\n  _hover: {\n    opacity: 0.8\n  },\n  _active: {\n    opacity: 1\n  }\n};\nvar baseStyle = {\n  container: baseStyleContainer,\n  label: baseStyleLabel,\n  closeButton: baseStyleCloseButton\n};\nvar sizes = {\n  sm: {\n    container: {\n      minH: \"1.25rem\",\n      minW: \"1.25rem\",\n      fontSize: \"xs\",\n      px: 2,\n      borderRadius: \"md\"\n    },\n    closeButton: {\n      marginEnd: \"-2px\",\n      marginStart: \"0.35rem\"\n    }\n  },\n  md: {\n    container: {\n      minH: \"1.5rem\",\n      minW: \"1.5rem\",\n      fontSize: \"sm\",\n      borderRadius: \"md\",\n      px: 2\n    }\n  },\n  lg: {\n    container: {\n      minH: 8,\n      minW: 8,\n      fontSize: \"md\",\n      borderRadius: \"md\",\n      px: 3\n    }\n  }\n};\nvar variants = {\n  subtle: props => ({\n    container: Badge.variants.subtle(props)\n  }),\n  solid: props => ({\n    container: Badge.variants.solid(props)\n  }),\n  outline: props => ({\n    container: Badge.variants.outline(props)\n  })\n};\nvar defaultProps = {\n  size: \"md\",\n  variant: \"subtle\",\n  colorScheme: \"gray\"\n};\nexport default {\n  parts,\n  variants,\n  baseStyle,\n  sizes,\n  defaultProps\n};","map":{"version":3,"names":["Badge","parts","baseStyleContainer","fontWeight","lineHeight","outline","_focus","boxShadow","baseStyleLabel","baseStyleCloseButton","fontSize","w","h","transitionProperty","transitionDuration","borderRadius","marginStart","marginEnd","opacity","_disabled","bg","_hover","_active","baseStyle","container","label","closeButton","sizes","sm","minH","minW","px","md","lg","variants","subtle","props","solid","defaultProps","size","variant","colorScheme"],"sources":["../../../src/components/tag.ts"],"sourcesContent":["import Badge from \"./badge\"\n\nconst parts = [\"container\", \"label\", \"closeButton\"]\n\ntype Dict = Record<string, any>\n\nconst baseStyleContainer = {\n  fontWeight: \"medium\",\n  lineHeight: 1.2,\n  outline: 0,\n  _focus: {\n    boxShadow: \"outline\",\n  },\n}\n\nconst baseStyleLabel = {\n  lineHeight: 1.2,\n}\n\nconst baseStyleCloseButton = {\n  fontSize: \"18px\",\n  w: \"1.25rem\",\n  h: \"1.25rem\",\n  transitionProperty: \"common\",\n  transitionDuration: \"normal\",\n  borderRadius: \"full\",\n  marginStart: \"0.375rem\",\n  marginEnd: \"-1\",\n  opacity: 0.5,\n  _disabled: {\n    opacity: 0.4,\n  },\n  _focus: {\n    boxShadow: \"outline\",\n    bg: \"rgba(0, 0, 0, 0.14)\",\n  },\n  _hover: { opacity: 0.8 },\n  _active: { opacity: 1 },\n}\n\nconst baseStyle = {\n  container: baseStyleContainer,\n  label: baseStyleLabel,\n  closeButton: baseStyleCloseButton,\n}\n\nconst sizes = {\n  sm: {\n    container: {\n      minH: \"1.25rem\",\n      minW: \"1.25rem\",\n      fontSize: \"xs\",\n      px: 2,\n      borderRadius: \"md\",\n    },\n    closeButton: {\n      marginEnd: \"-2px\",\n      marginStart: \"0.35rem\",\n    },\n  },\n  md: {\n    container: {\n      minH: \"1.5rem\",\n      minW: \"1.5rem\",\n      fontSize: \"sm\",\n      borderRadius: \"md\",\n      px: 2,\n    },\n  },\n  lg: {\n    container: {\n      minH: 8,\n      minW: 8,\n      fontSize: \"md\",\n      borderRadius: \"md\",\n      px: 3,\n    },\n  },\n}\n\nconst variants = {\n  subtle: (props: Dict) => ({\n    container: Badge.variants.subtle(props),\n  }),\n  solid: (props: Dict) => ({\n    container: Badge.variants.solid(props),\n  }),\n  outline: (props: Dict) => ({\n    container: Badge.variants.outline(props),\n  }),\n}\n\nconst defaultProps = {\n  size: \"md\",\n  variant: \"subtle\",\n  colorScheme: \"gray\",\n}\n\nexport default {\n  parts,\n  variants,\n  baseStyle,\n  sizes,\n  defaultProps,\n}\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,SAAlB;AAEA,IAAMC,KAAK,GAAG,CAAC,WAAD,EAAc,OAAd,EAAuB,aAAvB,CAAd;AAIA,IAAMC,kBAAkB,GAAG;EACzBC,UAAU,EAAE,QADa;EAEzBC,UAAU,EAAE,GAFa;EAGzBC,OAAO,EAAE,CAHgB;EAIzBC,MAAM,EAAE;IACNC,SAAS,EAAE;EADL;AAJiB,CAA3B;AASA,IAAMC,cAAc,GAAG;EACrBJ,UAAU,EAAE;AADS,CAAvB;AAIA,IAAMK,oBAAoB,GAAG;EAC3BC,QAAQ,EAAE,MADiB;EAE3BC,CAAC,EAAE,SAFwB;EAG3BC,CAAC,EAAE,SAHwB;EAI3BC,kBAAkB,EAAE,QAJO;EAK3BC,kBAAkB,EAAE,QALO;EAM3BC,YAAY,EAAE,MANa;EAO3BC,WAAW,EAAE,UAPc;EAQ3BC,SAAS,EAAE,IARgB;EAS3BC,OAAO,EAAE,GATkB;EAU3BC,SAAS,EAAE;IACTD,OAAO,EAAE;EADA,CAVgB;EAa3BZ,MAAM,EAAE;IACNC,SAAS,EAAE,SADL;IAENa,EAAE,EAAE;EAFE,CAbmB;EAiB3BC,MAAM,EAAE;IAAEH,OAAO,EAAE;EAAX,CAjBmB;EAkB3BI,OAAO,EAAE;IAAEJ,OAAO,EAAE;EAAX;AAlBkB,CAA7B;AAqBA,IAAMK,SAAS,GAAG;EAChBC,SAAS,EAAEtB,kBADK;EAEhBuB,KAAK,EAAEjB,cAFS;EAGhBkB,WAAW,EAAEjB;AAHG,CAAlB;AAMA,IAAMkB,KAAK,GAAG;EACZC,EAAE,EAAE;IACFJ,SAAS,EAAE;MACTK,IAAI,EAAE,SADG;MAETC,IAAI,EAAE,SAFG;MAGTpB,QAAQ,EAAE,IAHD;MAITqB,EAAE,EAAE,CAJK;MAKThB,YAAY,EAAE;IALL,CADT;IAQFW,WAAW,EAAE;MACXT,SAAS,EAAE,MADA;MAEXD,WAAW,EAAE;IAFF;EARX,CADQ;EAcZgB,EAAE,EAAE;IACFR,SAAS,EAAE;MACTK,IAAI,EAAE,QADG;MAETC,IAAI,EAAE,QAFG;MAGTpB,QAAQ,EAAE,IAHD;MAITK,YAAY,EAAE,IAJL;MAKTgB,EAAE,EAAE;IALK;EADT,CAdQ;EAuBZE,EAAE,EAAE;IACFT,SAAS,EAAE;MACTK,IAAI,EAAE,CADG;MAETC,IAAI,EAAE,CAFG;MAGTpB,QAAQ,EAAE,IAHD;MAITK,YAAY,EAAE,IAJL;MAKTgB,EAAE,EAAE;IALK;EADT;AAvBQ,CAAd;AAkCA,IAAMG,QAAQ,GAAG;EACfC,MAAM,EAAGC,KAAD,KAAkB;IACxBZ,SAAS,EAAExB,KAAK,CAACkC,QAAN,CAAeC,MAAf,CAAsBC,KAAtB;EADa,CAAlB,CADO;EAIfC,KAAK,EAAGD,KAAD,KAAkB;IACvBZ,SAAS,EAAExB,KAAK,CAACkC,QAAN,CAAeG,KAAf,CAAqBD,KAArB;EADY,CAAlB,CAJQ;EAOf/B,OAAO,EAAG+B,KAAD,KAAkB;IACzBZ,SAAS,EAAExB,KAAK,CAACkC,QAAN,CAAe7B,OAAf,CAAuB+B,KAAvB;EADc,CAAlB;AAPM,CAAjB;AAYA,IAAME,YAAY,GAAG;EACnBC,IAAI,EAAE,IADa;EAEnBC,OAAO,EAAE,QAFU;EAGnBC,WAAW,EAAE;AAHM,CAArB;AAMA,eAAe;EACbxC,KADa;EAEbiC,QAFa;EAGbX,SAHa;EAIbI,KAJa;EAKbW;AALa,CAAf","ignoreList":[]},"metadata":{},"sourceType":"module"}